{
  "contractName": "TokenTaker",
  "abi": [
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract DetokToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DetokToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "holdToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DetokToken\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"holdToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract DetokToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ubuntu/detok/Detok/core/decentralized/contracts/TokenTaker.sol\":\"TokenTaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ubuntu/detok/Detok/core/decentralized/contracts/TokenTaker.sol\":{\"keccak256\":\"0xdcdb5963042c356d3735ec58f64b5d35ee702cd9abcd02aaa11afa22e4fe43d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25086421c9a290bb8571db8be50d20a721f41116806efcd33bac00be8c533333\",\"dweb:/ipfs/QmfS6miHrz74k4mtKiMTssgn7CfVQiQWdxfN2jreiUVQoX\"]},\"/home/ubuntu/detok/Detok/core/decentralized/contracts/token/DetokToken.sol\":{\"keccak256\":\"0x7ededf359d5f4a5192a625b0aed1422bdf472df8a8941dd295f25dfcc9359fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c5a5672bce7d50692ada67c2e07c6700c2930ab55afd4fb60a54b2c1a94c9\",\"dweb:/ipfs/QmSE7FhHscLfnqFEuE5QShdwF5Wuj2qwtuGd9w71rCMojY\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061016f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063dd7e6f901461003b578063fc0c546a14610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610087565b005b61006b6100f2565b604080516001600160a01b039092168252519081900360200190f35b6001546001600160a01b031633146100d05760405162461bcd60e51b81526004018080602001828103825260388152602001806101026038913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03168156fe546869732066756e6374696f6e2063616e206265206f6e6c7920657865637574656420627920636f6e747261637420646576656c6f706572a2646970667358221220fcb87ed30b2200dc094ab12f105e2c081fc60b2ab428cd39121b71044472c45e64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063dd7e6f901461003b578063fc0c546a14610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610087565b005b61006b6100f2565b604080516001600160a01b039092168252519081900360200190f35b6001546001600160a01b031633146100d05760405162461bcd60e51b81526004018080602001828103825260388152602001806101026038913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03168156fe546869732066756e6374696f6e2063616e206265206f6e6c7920657865637574656420627920636f6e747261637420646576656c6f706572a2646970667358221220fcb87ed30b2200dc094ab12f105e2c081fc60b2ab428cd39121b71044472c45e64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "262:434:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "262:434:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:90;;;;;;;;;;;;;;;;-1:-1:-1;604:90:4;-1:-1:-1;;;;;604:90:4;;:::i;:::-;;324:23;;;:::i;:::-;;;;-1:-1:-1;;;;;324:23:4;;;;;;;;;;;;;;604:90;489:16;;-1:-1:-1;;;;;489:16:4;509:10;489:30;481:99;;;;-1:-1:-1;;;481:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:5:::1;:14:::0;;-1:-1:-1;;;;;;673:14:4::1;-1:-1:-1::0;;;;;673:14:4;;;::::1;::::0;;;::::1;::::0;;604:90::o;324:23::-;;;-1:-1:-1;;;;;324:23:4;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./token/DetokToken.sol\";\n/* \n    This is for the Contract that wants to be role of Ethereum wallet.\n\n */\ncontract TokenTaker {\n    using SafeERC20 for DetokToken;\n    DetokToken public token;\n    address developerAddress;\n    \n    /* TODO : It will be change by token holder voting */\n    modifier onlyDeveloper() {\n        require(developerAddress == msg.sender, \"This function can be only executed by contract developer\");\n        _;\n    }\n\n    function holdToken(DetokToken _token) public onlyDeveloper {\n        token = _token;\n    }\n}",
  "sourcePath": "/home/ubuntu/detok/Detok/core/decentralized/contracts/TokenTaker.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/contracts/TokenTaker.sol",
    "exportedSymbols": {
      "TokenTaker": [
        1038
      ]
    },
    "id": 1039,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1004,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:4"
      },
      {
        "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 1005,
        "nodeType": "ImportDirective",
        "scope": 1039,
        "sourceUnit": 5557,
        "src": "65:83:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/contracts/token/DetokToken.sol",
        "file": "./token/DetokToken.sol",
        "id": 1006,
        "nodeType": "ImportDirective",
        "scope": 1039,
        "sourceUnit": 3854,
        "src": "149:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1038,
        "linearizedBaseContracts": [
          1038
        ],
        "name": "TokenTaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1009,
            "libraryName": {
              "contractScope": null,
              "id": 1007,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5556,
              "src": "294:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5556",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "288:31:4",
            "typeName": {
              "contractScope": null,
              "id": 1008,
              "name": "DetokToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3853,
              "src": "308:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetokToken_$3853",
                "typeString": "contract DetokToken"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1011,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1038,
            "src": "324:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DetokToken_$3853",
              "typeString": "contract DetokToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1010,
              "name": "DetokToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3853,
              "src": "324:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetokToken_$3853",
                "typeString": "contract DetokToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1013,
            "mutability": "mutable",
            "name": "developerAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1038,
            "src": "353:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1012,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "471:127:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "developerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "489:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "509:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "509:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "489:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732066756e6374696f6e2063616e206265206f6e6c7920657865637574656420627920636f6e747261637420646576656c6f706572",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "521:58:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abf29d39fbc62f834046cde4bebe0502ba92f4dc572d0c789e0a56a54bf3b607",
                          "typeString": "literal_string \"This function can be only executed by contract developer\""
                        },
                        "value": "This function can be only executed by contract developer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abf29d39fbc62f834046cde4bebe0502ba92f4dc572d0c789e0a56a54bf3b607",
                          "typeString": "literal_string \"This function can be only executed by contract developer\""
                        }
                      ],
                      "id": 1015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "481:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:99:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "481:99:4"
                },
                {
                  "id": 1023,
                  "nodeType": "PlaceholderStatement",
                  "src": "590:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 1025,
            "name": "onlyDeveloper",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:2:4"
            },
            "src": "446:152:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "663:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1032,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "673:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DetokToken_$3853",
                        "typeString": "contract DetokToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "681:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DetokToken_$3853",
                        "typeString": "contract DetokToken"
                      }
                    },
                    "src": "673:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DetokToken_$3853",
                      "typeString": "contract DetokToken"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "673:14:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dd7e6f90",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1030,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1029,
                  "name": "onlyDeveloper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1025,
                  "src": "649:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "649:13:4"
              }
            ],
            "name": "holdToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "623:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DetokToken_$3853",
                    "typeString": "contract DetokToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1026,
                    "name": "DetokToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3853,
                    "src": "623:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DetokToken_$3853",
                      "typeString": "contract DetokToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:19:4"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:0:4"
            },
            "scope": 1038,
            "src": "604:90:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1039,
        "src": "262:434:4"
      }
    ],
    "src": "32:664:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/contracts/TokenTaker.sol",
      "exportedSymbols": {
        "TokenTaker": [
          1038
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.7",
            ".0"
          ]
        },
        "id": 1004,
        "name": "PragmaDirective",
        "src": "32:32:4"
      },
      {
        "attributes": {
          "SourceUnit": 5557,
          "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
          "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
          "scope": 1039,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1005,
        "name": "ImportDirective",
        "src": "65:83:4"
      },
      {
        "attributes": {
          "SourceUnit": 3854,
          "absolutePath": "/home/ubuntu/detok/Detok/core/decentralized/contracts/token/DetokToken.sol",
          "file": "./token/DetokToken.sol",
          "scope": 1039,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1006,
        "name": "ImportDirective",
        "src": "149:32:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1038
          ],
          "name": "TokenTaker",
          "scope": 1039
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeERC20",
                  "referencedDeclaration": 5556,
                  "type": "library SafeERC20"
                },
                "id": 1007,
                "name": "UserDefinedTypeName",
                "src": "294:9:4"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DetokToken",
                  "referencedDeclaration": 3853,
                  "type": "contract DetokToken"
                },
                "id": 1008,
                "name": "UserDefinedTypeName",
                "src": "308:10:4"
              }
            ],
            "id": 1009,
            "name": "UsingForDirective",
            "src": "288:31:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "fc0c546a",
              "mutability": "mutable",
              "name": "token",
              "overrides": null,
              "scope": 1038,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DetokToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DetokToken",
                  "referencedDeclaration": 3853,
                  "type": "contract DetokToken"
                },
                "id": 1010,
                "name": "UserDefinedTypeName",
                "src": "324:10:4"
              }
            ],
            "id": 1011,
            "name": "VariableDeclaration",
            "src": "324:23:4"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "developerAddress",
              "overrides": null,
              "scope": 1038,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1012,
                "name": "ElementaryTypeName",
                "src": "353:7:4"
              }
            ],
            "id": 1013,
            "name": "VariableDeclaration",
            "src": "353:24:4"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyDeveloper",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1014,
                "name": "ParameterList",
                "src": "468:2:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_abf29d39fbc62f834046cde4bebe0502ba92f4dc572d0c789e0a56a54bf3b607",
                                  "typeString": "literal_string \"This function can be only executed by contract developer\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1015,
                            "name": "Identifier",
                            "src": "481:7:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1013,
                                  "type": "address",
                                  "value": "developerAddress"
                                },
                                "id": 1016,
                                "name": "Identifier",
                                "src": "489:16:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1017,
                                    "name": "Identifier",
                                    "src": "509:3:4"
                                  }
                                ],
                                "id": 1018,
                                "name": "MemberAccess",
                                "src": "509:10:4"
                              }
                            ],
                            "id": 1019,
                            "name": "BinaryOperation",
                            "src": "489:30:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546869732066756e6374696f6e2063616e206265206f6e6c7920657865637574656420627920636f6e747261637420646576656c6f706572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This function can be only executed by contract developer\"",
                              "value": "This function can be only executed by contract developer"
                            },
                            "id": 1020,
                            "name": "Literal",
                            "src": "521:58:4"
                          }
                        ],
                        "id": 1021,
                        "name": "FunctionCall",
                        "src": "481:99:4"
                      }
                    ],
                    "id": 1022,
                    "name": "ExpressionStatement",
                    "src": "481:99:4"
                  },
                  {
                    "id": 1023,
                    "name": "PlaceholderStatement",
                    "src": "590:1:4"
                  }
                ],
                "id": 1024,
                "name": "Block",
                "src": "471:127:4"
              }
            ],
            "id": 1025,
            "name": "ModifierDefinition",
            "src": "446:152:4"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "dd7e6f90",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "holdToken",
              "overrides": null,
              "scope": 1038,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token",
                      "overrides": null,
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract DetokToken",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "DetokToken",
                          "referencedDeclaration": 3853,
                          "type": "contract DetokToken"
                        },
                        "id": 1026,
                        "name": "UserDefinedTypeName",
                        "src": "623:10:4"
                      }
                    ],
                    "id": 1027,
                    "name": "VariableDeclaration",
                    "src": "623:17:4"
                  }
                ],
                "id": 1028,
                "name": "ParameterList",
                "src": "622:19:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1031,
                "name": "ParameterList",
                "src": "663:0:4"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1025,
                      "type": "modifier ()",
                      "value": "onlyDeveloper"
                    },
                    "id": 1029,
                    "name": "Identifier",
                    "src": "649:13:4"
                  }
                ],
                "id": 1030,
                "name": "ModifierInvocation",
                "src": "649:13:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DetokToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1011,
                              "type": "contract DetokToken",
                              "value": "token"
                            },
                            "id": 1032,
                            "name": "Identifier",
                            "src": "673:5:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1027,
                              "type": "contract DetokToken",
                              "value": "_token"
                            },
                            "id": 1033,
                            "name": "Identifier",
                            "src": "681:6:4"
                          }
                        ],
                        "id": 1034,
                        "name": "Assignment",
                        "src": "673:14:4"
                      }
                    ],
                    "id": 1035,
                    "name": "ExpressionStatement",
                    "src": "673:14:4"
                  }
                ],
                "id": 1036,
                "name": "Block",
                "src": "663:31:4"
              }
            ],
            "id": 1037,
            "name": "FunctionDefinition",
            "src": "604:90:4"
          }
        ],
        "id": 1038,
        "name": "ContractDefinition",
        "src": "262:434:4"
      }
    ],
    "id": 1039,
    "name": "SourceUnit",
    "src": "32:664:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-02T10:52:48.184Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}